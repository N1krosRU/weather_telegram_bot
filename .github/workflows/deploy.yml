name: Deployment
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # Используем Виртуальную машину (Ubuntu последней версии)
    steps:
    - name: Checkout project # Извлекаем репозиторий на виртуальную машину
      uses: actions/checkout@v3
    - name: Create SSH files 1  # Подготавливаем SSH файлы (создаём приватный ключ ssh)
      run: |
        mkdir -p ~/.ssh/
        echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/srvarkey
        chmod 600 ~/.ssh/srvarkey
    - name: Create SSH files 2  # Подготавливаем SSH файлы (создаём конфиг ssh)
      run: |
        cat >>~/.ssh/config <<END
        Host Remote_Server
          HostName ${{secrets.SSH_HOST}}
          User ${{secrets.SSH_USER}}
          IdentityFile ~/.ssh/srvarkey
          StrictHostKeyChecking no
        END
    - name: Clone project
      run: |
        ssh Remote_Server "cd /srv && rm -r weather_telegram_bot && git clone https://github.com/N1krosRU/weather_telegram_bot.git"
    - name: Build docker image
      run: |
        ssh Remote_Server "docker build -t weatherbot_image:latest -f /srv/weather_telegram_bot/Dockerfile"
    - name: Run container
      run: |
        ssh Remote_Server "docker run --restart=always -d -e BOT_API_KEY=${{secrets.BOT_API_KEY}} -e GISMETEO_TOKEN=${{secrets.GISMETEO_TOKEN}} --name weatherbot_container weatherbot_image:latest"
    # - name: Create enviroment variable on server # Создаем переменную окружения на сервере
    #   run: |
    #     ssh Remote_Server "cd /etc && echo 'BOT_API_KEY=${{secrets.BOT_API_KEY}}' > environment"
    #     ssh Remote_Server "cd /etc && echo 'GISMETEO_TOKEN=${{secrets.GISMETEO_TOKEN}}' > environment"